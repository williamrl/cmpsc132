Allen Downey - Search

Sorting Algorithms / Searching
==============================
-Linear Sorts
list = HAMBURGER
       0       8
find(U):Bool

0(n) min 1 max n

  u ? h
<-- <  
    < -->
    MRRU
     ^
     u?r
       r,u

1.6m ssn                0(logn)
find(199239192)
1.6m-max,min 0          bisect
800k                    max 22
400k                    min 0
200k
100k
50k
25k
12.5k
6250
3125
1662
831
415
207
103
...
==============================================================================================
Bubble Sort


7,2,1,9,2,1,5 unsorted
1-1-2-2-5-7-9 sorted

if current > next:
  swap(current, next)

2, 7, 1 ^iterates and swaps each number position if current is greater than next

else:
  current = next

^pushes us past nodes that current is not greater than next

next = current.get_next()


================================
def swap(first, sec):

prev = first.get_previous()
after = second.get_next()
prev.set_next(second)
sec.set_prev(prev)
sec.set_next(first)
first.set_prev(second)
first.set_next(after)
after.set-prev(first) 
================================================
Selection Sort

7-4-6-1
select smallest & move to front of unsorted

def selection_sort(arr):
    for i in range(len(arr)):
        min_idx = i
        for j in range(i+1, len(arr)):
            if arr[j] < arr[min_idx]:
                min_idx = j
        arr[i], arr[min_idx] = arr[min_idx], arr[i]
    return arr

breath first search = level by level